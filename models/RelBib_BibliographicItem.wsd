@startuml RelBib_BibliographicItem
/'
Diagram:        RelBib_BibliographicItem
DateCreate:     30/08/2018
Description:    These bibliographic models are developed to consolidate and standardize the data models used for bibliographic and citation purposes.
                These models are meant to be fully compatible with ISO 690 and ISO TC 46â€™s (and SC 4, SC 9) work on bibliography.
                They are used extensively in the following projects as containers for bibliographic data management and for managing document metadata:

                - ISO Standards
                - CSD Standards
                - Chinese Standards (GB and family)
                - ISO bibliography gem

                Below are the UML diagrams.
                The document models are expressed as UML and as RelaxNG Compact (RNC) grammars; see discussion under Grammars. This repository contains the RNC grammars for the base BibliographicItem model, Citation model and the Contributor model.
                The document models are currently used by IsoDoc-based authoring tools for standards, which convert Asciidoctor source to XML representations of the document models, and validate the XML generated against the RNC schemas:

                - https://github.com/metanorma/metanorma-iso
                - https://github.com/metanorma/metanorma-csd
                - https://github.com/metanorma/metanorma-gb
                - And so on

                They are also used by tools that render those XML representations of the document models, into HTML and Microsoft Word:

                - https://github.com/metanorma/isodoc
                - https://github.com/metanorma/metanorma-csd (inheriting from isodoc)
                - https://github.com/metanorma/metanorma-gb (inheriting from isodoc)
                - And so on

History of changes:
> DD/MM/YYYY
    - 20181211 add VersionInfo
    - 20190228 annotate BibliographicItem
    - 20190422 allow note/@type
    - 20190508 change DocumentStatus model
    - 20190522 annotate MediumType
    - 20190610 add price
    - 20190612 add keyword, license
    - 20190619 refine medium, place
    - 20190708 refine medium
    - 20200411 add stage and substage abbreviations
'/

'******* CONFIGURATION ************************************************
!include style.uml.inc


'******* CLASS DEFINITION *********************************************
class BibliographicItem {
    +type: BibItemType[0..1]
    +fetched: DateTime[0..1]
    +title: TypedTitleString[0..*]
    +formattedRef: FormattedString[0..1]
    +link: TypedUri[0..*]
    +docidentifier: DocumentIdentifier[0..*]
    +docnumber: String[0..1]
    +dates: BibliographicDate[0..*]
    +contributors: ContributionInfo[0..*]
    +edition: Edition[0..1]
    +version: VersionInfo[0..1]
    +note: TypedNote[0..*]
    +language: Iso639Code[0..*]
    +script: Iso15924Code[0..*]
    +abstract: FormattedString[0..*]
    +status: DocumentStatus[0..1]
    +copyright: CopyrightAssociation[0..1]
    +relation: DocumentRelation[0..*]
    +series: SeriesType[0..*]
    +medium: MediumType[0..1]
    +place: PlaceType[0..*]
    +price: PriceType[0..*]
    +extent: BiblItemLocality[0..*]
    +accessLocation: String[0..*]
    +license: String[0..*]
    +classification: DocumentIdentifier[0..*]
    +keyword: KeywordType[0..*]
    +validity: ValidityType[0..1]
}

class Edition{
    +number: String[0..1]
    +content: FormattedString
}

class TypedNote{
    +type: String[0..1]
    +content: FormattedString
}

class DocumentIdentifier{
    +id: String
    +type: String[0..1]
    +scope: String[0..1]
}

class DocumentStatus{
    +stage: LocalizedString
    +stage_abbreviation: LocalizedString[0..1]
    +substage: LocalizedString[0..1]
    +substage_abbreviation: LocalizedString[0..1]
    +iteration: LocalizedString[0..1]
}

class CopyrightAssociation{
    +from: DateTime
    +to: DateTime[0..1]
    +owner: Contributor
}

class MediumType{
    +content: String[0..1]
    +genre: String[0..1]
    +form: String[0..1]
    +carrier: String[0..1]
    +size: String[0..1]
    +scale: String[0..1]
}

class PriceType{
    +currency: Iso4217Code[0..1]
    +content: String
}

class TypedTitleString{
    +type: TitleType[0..1]
    +content: FormattedString
}

class ValidityType{
    +validityBegins: Iso8601DateTime[0..1]
    +validityEnds: Iso8601DateTime[0..1]
    +revision: Iso8601DateTime[0..1]
}

enum TitleType <<enumeration>>{
    alternative
    original
    unofficial
    subtitle
    main
}

class VersionInfo{
    +revision-date: Iso8601DateTime[0..1]
    +draft: String[0..1]
}

class PlaceType{
    +region: String[0..1]
    +uri: String[0..1]
    +content: String
}

'******* NOTES ********************************************************
note right of BibliographicItem: formattedref and title are mutually exclusive.
note bottom of MediumType: medium/form can be used to\ndifferentiate "electronic"\nfrom "physical" manifestations\nof a resource.
note bottom of Edition: the number attribute can be used for\nnumeric equivalent of the edition string

'******* CLASS RELATIONS **********************************************

DocumentIdentifier --> BibliographicItem
DocumentStatus --> BibliographicItem
CopyrightAssociation --> BibliographicItem 
MediumType --> BibliographicItem
VersionInfo --> BibliographicItem
BibliographicItem <-- TypedTitleString
BibliographicItem <-- ValidityType
BibliographicItem <-- TypedNote
BibliographicItem <-- Edition
BibliographicItem <-- PriceType
BibliographicItem <-- PlaceType

TypedTitleString <-- TitleType

@enduml
